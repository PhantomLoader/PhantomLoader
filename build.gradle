subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    group = 'io.github.phantomloader'
    version = '0.1'

    java {
        toolchain {
            JavaLanguageVersion.of(17)
        }
    }

    jar {
        manifest {
            attributes([
                    "Specification-Title": 'test',
                    "Specification-Vendor": 'HexagonNico',
                    "Specification-Version": project.version,
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.jar.archiveVersion,
                    "Implementation-Vendor": 'HexagonNico',
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    tasks.register('javadocJar', Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    tasks.register('sourcesJar', Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                pom {
                    name = 'Phantom Loader'
                    description = 'Automates part of the process of creating mods for multiple loaders by generating code at build time'
                    url = 'set url here'
                    licenses {
                        license {
                            name = 'Apache-2.0 license'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'HexagonNico'
                            name = 'Nicholas Amigoni'
                            email = 'nico.hex6@gmail.com'
                        }
                    }
                    scm {
                        connection = 'git@github.com:PhantomLoader/PhantomLoader.git'
                        url = 'https://github.com/PhantomLoader/PhantomLoader'
                    }
                }
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
                def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}