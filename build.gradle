subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    group = 'io.github.phantomloader'
    version = phantomVersion

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    jar {
        manifest {
            attributes([
                    "Specification-Title": rootProject.name,
                    "Specification-Vendor": 'HexagonNico',
                    "Specification-Version": project.version,
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.jar.archiveVersion,
                    "Implementation-Vendor": 'HexagonNico',
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId = project.group
                artifactId = artifactId
                version = project.version
                from components.java

                pom {
                    name = rootProject.name
                    description = 'A library that can automate the process of creating minecraft mods for multiple loaders'
                    url = 'https://github.com/PhantomLoader'

                    scm {
                        connection = 'git@github.com:PhantomLoader/PhantomLoader.git'
                        url = 'https://github.com/PhantomLoader/PhantomLoader'
                    }

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'HexagonNico'
                            name = 'Nicholas Amigoni'
                            email = 'nico.hex6@gmail.com'
                        }
                    }

                    repositories {
                        maven {
                            name = "Sonatype"
                            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                            credentials {
                                username = System.getenv('OSSRH_USERNAME')
                                password = System.getenv('OSSRH_PASSWORD')
                            }
                        }
                    }
                }
            }
        }
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }

    signing {
        sign publishing.publications.maven
    }
}